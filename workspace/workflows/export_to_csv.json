{
  "name": "Export Costs to CSV",
  "description": "Export detailed cost data to CSV file for external analysis or reporting",
  "language": "javascript",
  "createdAt": "2025-10-09T00:00:00.000Z",
  "tags": ["export", "csv", "reporting"],
  "code": "// Export Cost Data to CSV\nconst athena = new AWS.Athena({ region: 'ap-south-1' });\n\n// Query for detailed cost data\nconst startDate = new Date();\nstartDate.setDate(1); // First day of current month\nconst startDateStr = startDate.toISOString().split('T')[0];\n\nconst query = `\nSELECT \n  DATE(\\\"lineitem/usagestartdate\\\") as date,\n  \\\"product/productname\\\" as service,\n  \\\"lineitem/resourceid\\\" as resource_id,\n  \\\"product/region\\\" as region,\n  \\\"lineitem/usagetype\\\" as usage_type,\n  ROUND(SUM(\\\"lineitem/unblendedcost\\\"), 4) as cost,\n  SUM(\\\"lineitem/usageamount\\\") as usage_amount\nFROM \\\"raw-data-v1\\\".\\\"raw_aws_amnic\\\"\nWHERE \\\"lineitem/usagestartdate\\\" >= DATE('${startDateStr}')\n  AND \\\"lineitem/unblendedcost\\\" > 0\nGROUP BY \n  DATE(\\\"lineitem/usagestartdate\\\"),\n  \\\"product/productname\\\",\n  \\\"lineitem/resourceid\\\",\n  \\\"product/region\\\",\n  \\\"lineitem/usagetype\\\"\nORDER BY date DESC, cost DESC\nLIMIT 10000\n`;\n\nconsole.log('ðŸ“Š Exporting cost data to CSV...');\nconsole.log(`Period: ${startDateStr} to today\\n`);\n\n// In a full implementation, this would:\n// 1. Execute the Athena query\n// 2. Fetch results\n// 3. Convert to CSV format\n// 4. Save to workspace/data/costs_export.csv\n\nconst outputPath = 'workspace/data/costs_export.csv';\nconsole.log(`Output file: ${outputPath}`);\nconsole.log('\\nCSV will include columns:');\nconsole.log('- date, service, resource_id, region, usage_type, cost, usage_amount\\n');\n\nconsole.log('Run this workflow to generate the CSV file!');"
}
